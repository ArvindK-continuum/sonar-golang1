<!--
    Copyright 2017 - UniversitÃ© d'Artois

    This file is part of SonarQube Golang plugin (sonar-golang).

    Sonar-golang is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Sonar-golang is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Sonar-golang.  If not, see <http://www.gnu.org/licenses/>.

    Contributors:
               Thibault Falque (thibault_falque@ens.univ-artois.fr)
 -->
<checkstyle version="5.0">
  <file name="serverimage.go">
		<error column="2" line="14" message="var Serverhttp should be ServerHTTP" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="func name will be used as foo.FooMulti by other packages, and that stutters; consider calling this Multi" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="a blank import should be only in a main or test package, or have a comment justifying it" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="comment on exported type Foo should be of the form "Foo ..."" severity="warning" source="structcheck"></error>
    <error column="2" line="14" message="comment on exported type Foo should be of the form "Foo..."" severity="warning" source="structcheck"></error>
    <error column="2" line="14" message="comment on exported method Foo.Bar should be of the form "Foo.Bar ..."" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="comment on exported type Foo should be of the form "Foo ..." (with optional leading article)" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="context.Context should be the first parameter of a function" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="don't use ALL_CAPS in Go names; use CamelCase" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="don't use ALL_CAPS in Go names; use CamelCase" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="don't use leading k in Go names; var kFoo should be Foo" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="don't use underscores in Go names; var foo_bar should be fooBar" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="error should be the last type when returning multiple items" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="error strings should not be capitalized or end with punctuation or a newline" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="error var err should have name of the form errFoo" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="exported method FooMethod returns unexported type unexportedType, which can be annoying to use" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="exported method FooMethod should have comment or be unexported" severity="warning" source="structcheck"></error>
    <error column="2" line="14" message="exported var FooType should have comment or be unexported" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="exported const FooType should have comment (or a comment on this block) or be unexported" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="exported %s %s should have its own declaration" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="exported type %v should have comment or be unexported" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="if block ends with a return statement, so drop this else and outdent its block" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="package comment should be of the form "Package..."" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
		<error column="2" line="14" message="" severity="warning" source="structcheck"></error>
  </file>
  </checkstyle>
